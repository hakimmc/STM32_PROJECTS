
STM32_REGISTER_PROJECT.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000001a4  080001a8  080001a8  000101a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  0800034c  0800034c  00020014  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  0800034c  0800034c  00020014  2**0
                  CONTENTS
  4 .ARM          00000000  0800034c  0800034c  00020014  2**0
                  CONTENTS
  5 .preinit_array 00000000  0800034c  0800034c  00020014  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800034c  0800034c  0001034c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000350  08000350  00010350  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000014  20000000  08000354  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  00020014  2**0
                  CONTENTS
 10 .bss          0000001c  20000014  20000014  00020014  2**2
                  ALLOC
 11 ._user_heap_stack 00000600  20000030  20000030  00020014  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  00020014  2**0
                  CONTENTS, READONLY
 13 .debug_info   0000023c  00000000  00000000  00020044  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000105  00000000  00000000  00020280  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000058  00000000  00000000  00020388  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 00000040  00000000  00000000  000203e0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00000f40  00000000  00000000  00020420  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00000467  00000000  00000000  00021360  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00003be1  00000000  00000000  000217c7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000050  00000000  00000000  000253a8  2**0
                  CONTENTS, READONLY
 21 .debug_frame  000000a0  00000000  00000000  000253f8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a8 <__do_global_dtors_aux>:
 80001a8:	b510      	push	{r4, lr}
 80001aa:	4c05      	ldr	r4, [pc, #20]	; (80001c0 <__do_global_dtors_aux+0x18>)
 80001ac:	7823      	ldrb	r3, [r4, #0]
 80001ae:	b933      	cbnz	r3, 80001be <__do_global_dtors_aux+0x16>
 80001b0:	4b04      	ldr	r3, [pc, #16]	; (80001c4 <__do_global_dtors_aux+0x1c>)
 80001b2:	b113      	cbz	r3, 80001ba <__do_global_dtors_aux+0x12>
 80001b4:	4804      	ldr	r0, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x20>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	2301      	movs	r3, #1
 80001bc:	7023      	strb	r3, [r4, #0]
 80001be:	bd10      	pop	{r4, pc}
 80001c0:	20000014 	.word	0x20000014
 80001c4:	00000000 	.word	0x00000000
 80001c8:	08000334 	.word	0x08000334

080001cc <frame_dummy>:
 80001cc:	b508      	push	{r3, lr}
 80001ce:	4b03      	ldr	r3, [pc, #12]	; (80001dc <frame_dummy+0x10>)
 80001d0:	b11b      	cbz	r3, 80001da <frame_dummy+0xe>
 80001d2:	4903      	ldr	r1, [pc, #12]	; (80001e0 <frame_dummy+0x14>)
 80001d4:	4803      	ldr	r0, [pc, #12]	; (80001e4 <frame_dummy+0x18>)
 80001d6:	f3af 8000 	nop.w
 80001da:	bd08      	pop	{r3, pc}
 80001dc:	00000000 	.word	0x00000000
 80001e0:	20000018 	.word	0x20000018
 80001e4:	08000334 	.word	0x08000334

080001e8 <main>:
void GPIO_INIT(void);
void Delay (uint32_t time);
volatile int bool=0;

int main(void)
{
 80001e8:	b580      	push	{r7, lr}
 80001ea:	af00      	add	r7, sp, #0
	GPIO_INIT();
 80001ec:	f000 f826 	bl	800023c <GPIO_INIT>
	GPIOD->ODR |= 1<<13;
 80001f0:	4b07      	ldr	r3, [pc, #28]	; (8000210 <main+0x28>)
 80001f2:	695b      	ldr	r3, [r3, #20]
 80001f4:	4a06      	ldr	r2, [pc, #24]	; (8000210 <main+0x28>)
 80001f6:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 80001fa:	6153      	str	r3, [r2, #20]
    /* Loop forever */
	for(;;){
		//*GPIOD_ODR^=1<<12; //worked
		GPIOD->ODR ^= (1<<12| 1<<13) ;   //worked as well
 80001fc:	4b04      	ldr	r3, [pc, #16]	; (8000210 <main+0x28>)
 80001fe:	695b      	ldr	r3, [r3, #20]
 8000200:	4a03      	ldr	r2, [pc, #12]	; (8000210 <main+0x28>)
 8000202:	f483 5340 	eor.w	r3, r3, #12288	; 0x3000
 8000206:	6153      	str	r3, [r2, #20]
		Delay(1000000);
 8000208:	4802      	ldr	r0, [pc, #8]	; (8000214 <main+0x2c>)
 800020a:	f000 f805 	bl	8000218 <Delay>
		GPIOD->ODR ^= (1<<12| 1<<13) ;   //worked as well
 800020e:	e7f5      	b.n	80001fc <main+0x14>
 8000210:	40020c00 	.word	0x40020c00
 8000214:	000f4240 	.word	0x000f4240

08000218 <Delay>:
	}
}

void Delay (uint32_t time)
{
 8000218:	b480      	push	{r7}
 800021a:	b083      	sub	sp, #12
 800021c:	af00      	add	r7, sp, #0
 800021e:	6078      	str	r0, [r7, #4]
	while (time--);
 8000220:	bf00      	nop
 8000222:	687b      	ldr	r3, [r7, #4]
 8000224:	1e5a      	subs	r2, r3, #1
 8000226:	607a      	str	r2, [r7, #4]
 8000228:	2b00      	cmp	r3, #0
 800022a:	d1fa      	bne.n	8000222 <Delay+0xa>
}
 800022c:	bf00      	nop
 800022e:	bf00      	nop
 8000230:	370c      	adds	r7, #12
 8000232:	46bd      	mov	sp, r7
 8000234:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000238:	4770      	bx	lr
	...

0800023c <GPIO_INIT>:

void GPIO_INIT(void){
 800023c:	b480      	push	{r7}
 800023e:	af00      	add	r7, sp, #0
	*AHB1ENR=1<<3;
 8000240:	4b10      	ldr	r3, [pc, #64]	; (8000284 <GPIO_INIT+0x48>)
 8000242:	681b      	ldr	r3, [r3, #0]
 8000244:	2208      	movs	r2, #8
 8000246:	601a      	str	r2, [r3, #0]
	*GPIOD_MODER |=(1<<24 | 1<<26) ;
 8000248:	4b0f      	ldr	r3, [pc, #60]	; (8000288 <GPIO_INIT+0x4c>)
 800024a:	681b      	ldr	r3, [r3, #0]
 800024c:	681a      	ldr	r2, [r3, #0]
 800024e:	4b0e      	ldr	r3, [pc, #56]	; (8000288 <GPIO_INIT+0x4c>)
 8000250:	681b      	ldr	r3, [r3, #0]
 8000252:	f042 62a0 	orr.w	r2, r2, #83886080	; 0x5000000
 8000256:	601a      	str	r2, [r3, #0]
	*GPIOD_OTYPER &=(0<<12 & 0<<13);
 8000258:	4b0c      	ldr	r3, [pc, #48]	; (800028c <GPIO_INIT+0x50>)
 800025a:	681b      	ldr	r3, [r3, #0]
 800025c:	2200      	movs	r2, #0
 800025e:	801a      	strh	r2, [r3, #0]
	*GPIOD_OSPEEDR |= (1<<24 | 1<<26);
 8000260:	4b0b      	ldr	r3, [pc, #44]	; (8000290 <GPIO_INIT+0x54>)
 8000262:	681b      	ldr	r3, [r3, #0]
 8000264:	681a      	ldr	r2, [r3, #0]
 8000266:	4b0a      	ldr	r3, [pc, #40]	; (8000290 <GPIO_INIT+0x54>)
 8000268:	681b      	ldr	r3, [r3, #0]
 800026a:	f042 62a0 	orr.w	r2, r2, #83886080	; 0x5000000
 800026e:	601a      	str	r2, [r3, #0]
	*GPIOD_PUPDR &= (0<<24 & 0<<25 & 0<<26 & 0<<27);
 8000270:	4b08      	ldr	r3, [pc, #32]	; (8000294 <GPIO_INIT+0x58>)
 8000272:	681b      	ldr	r3, [r3, #0]
 8000274:	2200      	movs	r2, #0
 8000276:	601a      	str	r2, [r3, #0]
}
 8000278:	bf00      	nop
 800027a:	46bd      	mov	sp, r7
 800027c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000280:	4770      	bx	lr
 8000282:	bf00      	nop
 8000284:	20000000 	.word	0x20000000
 8000288:	20000004 	.word	0x20000004
 800028c:	20000008 	.word	0x20000008
 8000290:	2000000c 	.word	0x2000000c
 8000294:	20000010 	.word	0x20000010

08000298 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000298:	480d      	ldr	r0, [pc, #52]	; (80002d0 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800029a:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 800029c:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80002a0:	480c      	ldr	r0, [pc, #48]	; (80002d4 <LoopForever+0x6>)
  ldr r1, =_edata
 80002a2:	490d      	ldr	r1, [pc, #52]	; (80002d8 <LoopForever+0xa>)
  ldr r2, =_sidata
 80002a4:	4a0d      	ldr	r2, [pc, #52]	; (80002dc <LoopForever+0xe>)
  movs r3, #0
 80002a6:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80002a8:	e002      	b.n	80002b0 <LoopCopyDataInit>

080002aa <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80002aa:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002ac:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002ae:	3304      	adds	r3, #4

080002b0 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002b0:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002b2:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80002b4:	d3f9      	bcc.n	80002aa <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80002b6:	4a0a      	ldr	r2, [pc, #40]	; (80002e0 <LoopForever+0x12>)
  ldr r4, =_ebss
 80002b8:	4c0a      	ldr	r4, [pc, #40]	; (80002e4 <LoopForever+0x16>)
  movs r3, #0
 80002ba:	2300      	movs	r3, #0
  b LoopFillZerobss
 80002bc:	e001      	b.n	80002c2 <LoopFillZerobss>

080002be <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80002be:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80002c0:	3204      	adds	r2, #4

080002c2 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80002c2:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80002c4:	d3fb      	bcc.n	80002be <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80002c6:	f000 f811 	bl	80002ec <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80002ca:	f7ff ff8d 	bl	80001e8 <main>

080002ce <LoopForever>:

LoopForever:
  b LoopForever
 80002ce:	e7fe      	b.n	80002ce <LoopForever>
  ldr   r0, =_estack
 80002d0:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80002d4:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80002d8:	20000014 	.word	0x20000014
  ldr r2, =_sidata
 80002dc:	08000354 	.word	0x08000354
  ldr r2, =_sbss
 80002e0:	20000014 	.word	0x20000014
  ldr r4, =_ebss
 80002e4:	20000030 	.word	0x20000030

080002e8 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80002e8:	e7fe      	b.n	80002e8 <ADC_IRQHandler>
	...

080002ec <__libc_init_array>:
 80002ec:	b570      	push	{r4, r5, r6, lr}
 80002ee:	4d0d      	ldr	r5, [pc, #52]	; (8000324 <__libc_init_array+0x38>)
 80002f0:	4c0d      	ldr	r4, [pc, #52]	; (8000328 <__libc_init_array+0x3c>)
 80002f2:	1b64      	subs	r4, r4, r5
 80002f4:	10a4      	asrs	r4, r4, #2
 80002f6:	2600      	movs	r6, #0
 80002f8:	42a6      	cmp	r6, r4
 80002fa:	d109      	bne.n	8000310 <__libc_init_array+0x24>
 80002fc:	4d0b      	ldr	r5, [pc, #44]	; (800032c <__libc_init_array+0x40>)
 80002fe:	4c0c      	ldr	r4, [pc, #48]	; (8000330 <__libc_init_array+0x44>)
 8000300:	f000 f818 	bl	8000334 <_init>
 8000304:	1b64      	subs	r4, r4, r5
 8000306:	10a4      	asrs	r4, r4, #2
 8000308:	2600      	movs	r6, #0
 800030a:	42a6      	cmp	r6, r4
 800030c:	d105      	bne.n	800031a <__libc_init_array+0x2e>
 800030e:	bd70      	pop	{r4, r5, r6, pc}
 8000310:	f855 3b04 	ldr.w	r3, [r5], #4
 8000314:	4798      	blx	r3
 8000316:	3601      	adds	r6, #1
 8000318:	e7ee      	b.n	80002f8 <__libc_init_array+0xc>
 800031a:	f855 3b04 	ldr.w	r3, [r5], #4
 800031e:	4798      	blx	r3
 8000320:	3601      	adds	r6, #1
 8000322:	e7f2      	b.n	800030a <__libc_init_array+0x1e>
 8000324:	0800034c 	.word	0x0800034c
 8000328:	0800034c 	.word	0x0800034c
 800032c:	0800034c 	.word	0x0800034c
 8000330:	08000350 	.word	0x08000350

08000334 <_init>:
 8000334:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000336:	bf00      	nop
 8000338:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800033a:	bc08      	pop	{r3}
 800033c:	469e      	mov	lr, r3
 800033e:	4770      	bx	lr

08000340 <_fini>:
 8000340:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000342:	bf00      	nop
 8000344:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000346:	bc08      	pop	{r3}
 8000348:	469e      	mov	lr, r3
 800034a:	4770      	bx	lr
